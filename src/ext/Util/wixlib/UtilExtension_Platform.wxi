<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the Microsoft Reciprocal License. See LICENSE.TXT file in the project root for full license information. -->


<Include xmlns="http://wixtoolset.org/schemas/v4/wxs">
    <?include ..\..\caDecor.wxi ?>

    <Fragment>
        <CustomAction Id="$(var.Prefix)FailWhenDeferred$(var.Suffix)" DllEntry="WixFailWhenDeferred" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)FailWhenDeferred$(var.Suffix)" Before="InstallFinalize" Condition="WIXFAILWHENDEFERRED=1 AND VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)WaitForEvent$(var.Suffix)" DllEntry="WixWaitForEvent" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)WaitForEvent$(var.Suffix)" Before="InstallFinalize" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)WaitForEventDeferred$(var.Suffix)" DllEntry="WixWaitForEvent" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)WaitForEventDeferred$(var.Suffix)" After="InstallInitialize" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)ExitEarlyWithSuccess$(var.Suffix)" DllEntry="WixExitEarlyWithSuccess" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)ExitEarlyWithSuccess$(var.Suffix)" After="FindRelatedProducts" Condition="NEWERVERSIONDETECTED AND VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)RemoveFoldersEx$(var.Suffix)" DllEntry="WixRemoveFoldersEx" Execute="immediate" Return="ignore" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="$(var.Prefix)RemoveFoldersEx$(var.Suffix)" Before="CostInitialize" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)RemoveRegistryKeysEx$(var.Suffix)" DllEntry="WixRemoveRegistryKeysEx" Execute="immediate" Return="ignore" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="$(var.Prefix)RemoveRegistryKeysEx$(var.Suffix)" Before="RemoveRegistryValues" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)BroadcastSettingChange$(var.Suffix)" DllEntry="WixBroadcastSettingChange" Execute="immediate" Return="ignore" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)BroadcastSettingChange$(var.Suffix)" After="InstallFinalize" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)BroadcastEnvironmentChange$(var.Suffix)" DllEntry="WixBroadcastEnvironmentChange" Execute="immediate" Return="ignore" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)BroadcastEnvironmentChange$(var.Suffix)" After="InstallFinalize" />
        </InstallExecuteSequence>
    </Fragment>

    <!-- ShellExec custom actions (for when only one is needed; multiple executions need their own IDs) -->
    <Fragment>
        <PropertyRef Id="WixShellExecBinaryId" />
        <CustomAction Id="$(var.Prefix)ShellExecBinary$(var.Suffix)" DllEntry="WixShellExecBinary" Execute="immediate" Return="check" Impersonate="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
    </Fragment>

    <Fragment>
        <PropertyRef Id="WixShellExecTarget" />
        <CustomAction Id="$(var.Prefix)ShellExec$(var.Suffix)" DllEntry="WixShellExec" Execute="immediate" Return="check" Impersonate="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
    </Fragment>

    <Fragment>
        <PropertyRef Id="WixUnelevatedShellExecTarget" />
        <CustomAction Id="$(var.Prefix)UnelevatedShellExec$(var.Suffix)" DllEntry="WixUnelevatedShellExec" Execute="immediate" Return="check" Impersonate="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
    </Fragment>

    <Fragment>
        <PropertyRef Id="WixQuietExecCmdLine" />
        <CustomAction Id="$(var.Prefix)QuietExec$(var.Suffix)" DllEntry="WixQuietExec" Execute="immediate" Return="check" Impersonate="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
    </Fragment>

    <Fragment>
        <PropertyRef Id="WixQuietExec64CmdLine" />
        <CustomAction Id="$(var.Prefix)QuietExec64$(var.Suffix)" DllEntry="WixQuietExec64" Execute="immediate" Return="check" Impersonate="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
    </Fragment>

    <!-- SilentExec custom actions differ from QtExec in that they do not log the commandline or output of the exe -->
    <Fragment>
        <PropertyRef Id="WixSilentExecCmdLine" />
        <CustomAction Id="$(var.Prefix)SilentExec$(var.Suffix)" DllEntry="WixSilentExec" Execute="immediate" Return="check" Impersonate="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
    </Fragment>

    <Fragment>
        <PropertyRef Id="WixSilentExec64CmdLine" />
        <CustomAction Id="$(var.Prefix)SilentExec64$(var.Suffix)" DllEntry="WixSilentExec64" Execute="immediate" Return="check" Impersonate="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)CheckRebootRequired$(var.Suffix)" DllEntry="WixCheckRebootRequired" Execute="immediate" Return="ignore" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <!-- Condition this so it runs on install and MMode, but not uninstall -->
            <Custom Action="virtual $(var.Prefix)CheckRebootRequired$(var.Suffix)" After="InstallFinalize" Condition="NOT REMOVE~=&quot;ALL&quot; AND VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)CloseApplications$(var.Suffix)" DllEntry="WixCloseApplications" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)CloseApplicationsDeferred$(var.Suffix)" DllEntry="WixCloseApplicationsDeferred" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomActionRef Id="$(var.Prefix)CheckRebootRequired$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)CloseApplications$(var.Suffix)" Before="InstallFiles" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)RegisterRestartResources$(var.Suffix)" DllEntry="WixRegisterRestartResources" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)RegisterRestartResources$(var.Suffix)" Before="InstallValidate" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UIRef Id="ConfigureGroupsErrorText" />
        <CustomAction Id="$(var.Prefix6)ConfigureGroups$(var.Suffix)" DllEntry="ConfigureGroups" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)CreateGroup$(var.Suffix)" DllEntry="CreateGroup" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)CreateGroupRollback$(var.Suffix)" DllEntry="CreateGroupRollback" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <!-- RemoveGroup is a type commit action because it is not possible to rollback the removal of a group -->
        <CustomAction Id="$(var.Prefix6)RemoveGroup$(var.Suffix)" DllEntry="RemoveGroup" Impersonate="no" Execute="commit" Return="ignore" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <CustomAction Id="$(var.Prefix6)CreateDomainGroup$(var.Suffix)" DllEntry="CreateGroup" Impersonate="yes" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)CreateDomainGroupRollback$(var.Suffix)" DllEntry="CreateGroupRollback" Impersonate="yes" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <!-- RemoveGroup is a type commit action because it is not possible to rollback the removal of a group -->
        <CustomAction Id="$(var.Prefix6)RemoveDomainGroup$(var.Suffix)" DllEntry="RemoveGroup" Impersonate="yes" Execute="commit" Return="ignore" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix6)ConfigureGroups$(var.Suffix)" Before="InstallFiles" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UIRef Id="ConfigureGroupMembershipErrorText" />
        <CustomAction Id="$(var.Prefix6)AddGroupMembership$(var.Suffix)" DllEntry="AddGroupMembership" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)AddGroupMembershipRollback$(var.Suffix)" DllEntry="AddGroupMembershipRollback" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)RemoveGroupMembership$(var.Suffix)" DllEntry="RemoveGroupMembership" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)RemoveGroupMembershipRollback$(var.Suffix)" DllEntry="RemoveGroupMembershipRollback" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)AddDomainGroupMembership$(var.Suffix)" DllEntry="AddGroupMembership" Impersonate="yes" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)AddDomainGroupMembershipRollback$(var.Suffix)" DllEntry="AddGroupMembershipRollback" Impersonate="yes" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)RemoveDomainGroupMembership$(var.Suffix)" DllEntry="RemoveGroupMembership" Impersonate="yes" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix6)RemoveDomainGroupMembershipRollback$(var.Suffix)" DllEntry="RemoveGroupMembershipRollback" Impersonate="yes" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
    </Fragment>

    <Fragment>
        <UIRef Id="ConfigureUsersErrorText" />

        <CustomAction Id="$(var.Prefix)ConfigureUsers$(var.Suffix)" DllEntry="ConfigureUsers" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)CreateUser$(var.Suffix)" DllEntry="CreateUser" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)CreateUserRollback$(var.Suffix)" DllEntry="CreateUserRollback" Impersonate="no" Execute="rollback" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <!-- RemoveUser is a type commit action because it is not possible to rollback the removal of a user -->
        <CustomAction Id="$(var.Prefix)RemoveUser$(var.Suffix)" DllEntry="RemoveUser" Impersonate="no" Execute="commit" Return="ignore" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)ConfigureUsers$(var.Suffix)" Before="InstallFiles" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UIRef Id="ConfigureSmbErrorsText" />

        <CustomAction Id="$(var.Prefix)ConfigureSmbInstall$(var.Suffix)" DllEntry="ConfigureSmbInstall" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ConfigureSmbUninstall$(var.Suffix)" DllEntry="ConfigureSmbUninstall" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)CreateSmb$(var.Suffix)" DllEntry="CreateSmb" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)CreateSmbRollback$(var.Suffix)" DllEntry="DropSmb" Impersonate="no" Execute="rollback" Return="ignore" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)DropSmb$(var.Suffix)" DllEntry="DropSmb" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)DropSmbRollback$(var.Suffix)" DllEntry="CreateSmb" Impersonate="no" Execute="rollback" Return="ignore" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)ConfigureSmbInstall$(var.Suffix)" After="InstallFiles" Condition="VersionNT &gt; 400" />
            <Custom Action="virtual $(var.Prefix)ConfigureSmbUninstall$(var.Suffix)" After="RemoveFiles" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UIRef Id="PerCounterDataErrorsText" />

        <CustomAction Id="$(var.Prefix)InstallPerfCounterData$(var.Suffix)" DllEntry="InstallPerfCounterData" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)UninstallPerfCounterData$(var.Suffix)" DllEntry="UninstallPerfCounterData" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RegisterPerfCounterData$(var.Suffix)" DllEntry="RegisterPerfCounterData" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)UnregisterPerfCounterData$(var.Suffix)" DllEntry="UnregisterPerfCounterData" Impersonate="no" Execute="deferred" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackRegisterPerfCounterData$(var.Suffix)" DllEntry="UnregisterPerfCounterData" Impersonate="no" Execute="rollback" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackUnregisterPerfCounterData$(var.Suffix)" DllEntry="RegisterPerfCounterData" Impersonate="no" Execute="rollback" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)InstallPerfCounterData$(var.Suffix)" After="WriteRegistryValues" Condition="VersionNT &gt; 400" />
            <Custom Action="virtual $(var.Prefix)UninstallPerfCounterData$(var.Suffix)" Before="RemoveRegistryValues" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UIRef Id="ConfigurePerfmonErrorsText" />

        <CustomAction Id="$(var.Prefix)ConfigurePerfmonInstall$(var.Suffix)" DllEntry="ConfigurePerfmonInstall" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ConfigurePerfmonUninstall$(var.Suffix)" DllEntry="ConfigurePerfmonUninstall" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RegisterPerfmon$(var.Suffix)" DllEntry="RegisterPerfmon" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)UnregisterPerfmon$(var.Suffix)" DllEntry="UnregisterPerfmon" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackRegisterPerfmon$(var.Suffix)" DllEntry="UnregisterPerfmon" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackUnregisterPerfmon$(var.Suffix)" DllEntry="RegisterPerfmon" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)ConfigurePerfmonInstall$(var.Suffix)" After="WriteRegistryValues" Condition="VersionNT &gt; 400" />
            <Custom Action="virtual $(var.Prefix)ConfigurePerfmonUninstall$(var.Suffix)" Before="RemoveRegistryValues" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)ConfigurePerfmonManifestRegister$(var.Suffix)" DllEntry="ConfigurePerfmonManifestRegister" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ConfigurePerfmonManifestUnregister$(var.Suffix)" DllEntry="ConfigurePerfmonManifestUnregister" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RegisterPerfmonManifest$(var.Suffix)" DllEntry="WixQuietExec" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)UnregisterPerfmonManifest$(var.Suffix)" DllEntry="WixQuietExec" Impersonate="no" Execute="deferred" Return="ignore" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackRegisterPerfmonManifest$(var.Suffix)" DllEntry="WixQuietExec" Impersonate="no" Execute="rollback" Return="ignore" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackUnregisterPerfmonManifest$(var.Suffix)" DllEntry="WixQuietExec" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)ConfigurePerfmonManifestRegister$(var.Suffix)" After="InstallFiles" Condition="VersionNT &gt; 400" />
            <Custom Action="virtual $(var.Prefix)ConfigurePerfmonManifestUnregister$(var.Suffix)" After="RemoveRegistryValues" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)ConfigureEventManifestRegister$(var.Suffix)" DllEntry="ConfigureEventManifestRegister" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ConfigureEventManifestUnregister$(var.Suffix)" DllEntry="ConfigureEventManifestUnregister" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RegisterEventManifest$(var.Suffix)" DllEntry="WixQuietExec" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)UnregisterEventManifest$(var.Suffix)" DllEntry="WixQuietExec" Impersonate="no" Execute="deferred" Return="ignore" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackRegisterEventManifest$(var.Suffix)" DllEntry="WixQuietExec" Impersonate="no" Execute="rollback" Return="ignore" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackUnregisterEventManifest$(var.Suffix)" DllEntry="WixQuietExec" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)ConfigureEventManifestRegister$(var.Suffix)" After="$(var.Prefix)SchedXmlFile$(var.Suffix)" Condition="VersionNT &gt; 400" />
            <Custom Action="virtual $(var.Prefix)ConfigureEventManifestUnregister$(var.Suffix)" After="RemoveRegistryValues" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)SchedServiceConfig$(var.Suffix)" DllEntry="SchedServiceConfig" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ExecServiceConfig$(var.Suffix)" DllEntry="ExecServiceConfig" Execute="deferred" Impersonate="no" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackServiceConfig$(var.Suffix)" DllEntry="RollbackServiceConfig" Execute="rollback" Impersonate="no" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <!-- Condition this so it runs on install and MMode, but not uninstall -->
            <Custom Action="virtual $(var.Prefix)SchedServiceConfig$(var.Suffix)" After="InstallServices" Condition="NOT REMOVE~=&quot;ALL&quot; AND VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)TouchFileDuringInstall$(var.Suffix)" DllEntry="WixTouchFileDuringInstall" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)TouchFileDuringUninstall$(var.Suffix)" DllEntry="WixTouchFileDuringUninstall" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ExecuteTouchFile$(var.Suffix)" DllEntry="WixExecuteTouchFile" Execute="deferred" Impersonate="no" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackTouchFile$(var.Suffix)" DllEntry="WixExecuteTouchFile" Execute="rollback" Impersonate="no" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)TouchFileDuringUninstall$(var.Suffix)" Before="RemoveFiles" />
            <Custom Action="virtual $(var.Prefix)TouchFileDuringInstall$(var.Suffix)" After="InstallFiles" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UIRef Id="XmlFileErrorsText" />

        <CustomAction Id="$(var.Prefix)SchedXmlFile$(var.Suffix)" DllEntry="SchedXmlFile" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ExecXmlFile$(var.Suffix)" DllEntry="ExecXmlFile" Execute="deferred" Impersonate="no" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ExecXmlFileRollback$(var.Suffix)" DllEntry="ExecXmlFileRollback" Execute="rollback" Impersonate="no" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)SchedXmlFile$(var.Suffix)" After="DuplicateFiles" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UIRef Id="XmlConfigErrorsText" />

        <CustomAction Id="$(var.Prefix)SchedXmlConfig$(var.Suffix)" DllEntry="SchedXmlConfig" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ExecXmlConfig$(var.Suffix)" DllEntry="ExecXmlConfig" Execute="deferred" Impersonate="no" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ExecXmlConfigRollback$(var.Suffix)" DllEntry="ExecXmlConfigRollback" Execute="rollback" Impersonate="no" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)SchedXmlConfig$(var.Suffix)" After="DuplicateFiles" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)SchedInternetShortcuts$(var.Suffix)" DllEntry="WixSchedInternetShortcuts" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackInternetShortcuts$(var.Suffix)" DllEntry="WixRollbackInternetShortcuts" Impersonate="no" Execute="rollback" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)CreateInternetShortcuts$(var.Suffix)" DllEntry="WixCreateInternetShortcuts" Impersonate="no" Execute="deferred" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)SchedInternetShortcuts$(var.Suffix)" Before="RemoveFolders" Condition="VersionNT &gt; 400" />
            <Custom Action="virtual $(var.Prefix)RollbackInternetShortcuts$(var.Suffix)" Before="$(var.Prefix)CreateInternetShortcuts$(var.Suffix)" Condition="VersionNT &gt; 400" />
            <Custom Action="virtual $(var.Prefix)CreateInternetShortcuts$(var.Suffix)" After="CreateShortcuts" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <UIRef Id="SecureObjectsErrors" />

        <CustomAction Id="$(var.Prefix)SchedSecureObjects$(var.Suffix)" DllEntry="SchedSecureObjects" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)SchedSecureObjectsRollback$(var.Suffix)" DllEntry="SchedSecureObjectsRollback" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ExecSecureObjects$(var.Suffix)" DllEntry="ExecSecureObjects" Execute="deferred" Impersonate="no" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ExecSecureObjectsRollback$(var.Suffix)" DllEntry="ExecSecureObjectsRollback" Execute="rollback" Impersonate="no" Return="check" HideTarget="yes" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <!-- Condition this so it runs on install and MMode, but not uninstall -->
            <Custom Action="virtual $(var.Prefix)SchedSecureObjects$(var.Suffix)" After="InstallServices" Condition="NOT REMOVE~=&quot;ALL&quot; AND VersionNT &gt; 400" />
            <Custom Action="virtual $(var.Prefix)SchedSecureObjectsRollback$(var.Suffix)" After="UnpublishFeatures" Condition="VersionNT &gt; 400" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)SchedFormatFiles$(var.Suffix)" DllEntry="WixSchedFormatFiles" Execute="immediate" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)ExecFormatFiles$(var.Suffix)" DllEntry="WixExecFormatFiles" Execute="deferred" Impersonate="no" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />
        <CustomAction Id="$(var.Prefix)RollbackFormatFiles$(var.Suffix)" DllEntry="WixExecFormatFiles" Execute="rollback" Impersonate="no" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="$(var.Prefix)SchedFormatFiles$(var.Suffix)" After="InstallFiles" />
        </InstallExecuteSequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)QueryOsInfo$(var.Suffix)" DllEntry="WixQueryOsInfo" Execute="firstSequence" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)QueryOsInfo$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallExecuteSequence>

        <InstallUISequence>
            <Custom Action="virtual $(var.Prefix)QueryOsInfo$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallUISequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)QueryOsDirs$(var.Suffix)" DllEntry="WixQueryOsDirs" Execute="firstSequence" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)QueryOsDirs$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallExecuteSequence>

        <InstallUISequence>
            <Custom Action="virtual $(var.Prefix)QueryOsDirs$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallUISequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)QueryOsWellKnownSID$(var.Suffix)" DllEntry="WixQueryOsWellKnownSID" Execute="firstSequence" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)QueryOsWellKnownSID$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallExecuteSequence>

        <InstallUISequence>
            <Custom Action="virtual $(var.Prefix)QueryOsWellKnownSID$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallUISequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)QueryOsDriverInfo$(var.Suffix)" DllEntry="WixQueryOsDriverInfo" Execute="firstSequence" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)QueryOsDriverInfo$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallExecuteSequence>

        <InstallUISequence>
            <Custom Action="virtual $(var.Prefix)QueryOsDriverInfo$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallUISequence>
    </Fragment>

    <Fragment>
        <CustomAction Id="$(var.Prefix)QueryNativeMachine$(var.Suffix)" DllEntry="WixQueryNativeMachine" Execute="firstSequence" Return="check" SuppressModularization="yes" BinaryRef="$(var.Prefix)UtilCA$(var.Suffix)" />

        <InstallExecuteSequence>
            <Custom Action="virtual $(var.Prefix)QueryNativeMachine$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallExecuteSequence>

        <InstallUISequence>
            <Custom Action="virtual $(var.Prefix)QueryNativeMachine$(var.Suffix)" After="AppSearch" Condition="VersionNT &gt; 400 OR (VersionNT = 400 AND ServicePackLevel &gt; 3)" />
        </InstallUISequence>
    </Fragment>

    <Fragment>
        <Binary Id="$(var.Prefix)UtilCA$(var.Suffix)" SourceFile="!(bindpath.utilca.$(var.platform))utilca.dll" />
    </Fragment>
</Include>
